{"ast":null,"code":"import _defineProperty from \"C:\\\\AReact\\\\nobo-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\AReact\\\\nobo-test\\\\src\\\\Calendar\\\\Calendar.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport 'react-big-scheduler/lib/css/style.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar';\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointments: [],\n      modal: false,\n      selectedEvent: {},\n      startDate: new Date(),\n      endDate: new Date()\n    };\n    this.toggle = this.toggle.bind(this);\n    this.onSelectEvent = this.onSelectEvent.bind(this);\n  }\n\n  onSelectEvent(event, e) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      selectedEvent: {\n        name: event.title,\n        description: event.description\n      },\n      startDate: event.start,\n      endDate: event.end\n    }));\n    console.log(event);\n  }\n\n  toggle() {\n    console.log('dkhlt');\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  async initDoctors(user) {\n    const id = user.doctorId;\n    const res = await axios.get(\"http://localhost:8081/doctor/show/\".concat(id)); //const res = await axios.get(`http://localhost:8081/doctor/show/-M9_5pj1A-BkUQgiqRvO`);\n\n    return res.data;\n  }\n\n  async componentDidMount() {\n    const user = localStorage.getItem('user');\n\n    if (!user.doctor) {\n      this.props.history.push('/ogin');\n      return;\n    }\n\n    const appointments = [];\n    const doctor = await this.initDoctors(user);\n    const appointmentArray = Object.keys(doctor.appointments).map(e => {\n      return _objectSpread({\n        id: e\n      }, doctor.appointments[e]);\n    });\n    console.log(appointmentArray);\n    appointmentArray.map(appointment => {\n      let e = {\n        id: doctor.phone,\n        //title: 'test',\n        title: doctor.firstName,\n        //description: 'test',\n        description: doctor.speciality,\n        start: new Date(appointment.date),\n        end: new Date(appointment.date)\n      };\n      appointments.push(e);\n    });\n    this.setState({\n      appointments: appointments\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(BigCalendar, {\n      localizer: localizer,\n      events: this.state.appointments,\n      defaultView: \"month\",\n      views: ['month', 'week', 'day'],\n      defaultDate: new Date(),\n      onSelectEvent: this.onSelectEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n} //export default withDragDropContext(Calendar);\n\n\nexport default Calendar;","map":{"version":3,"sources":["C:/AReact/nobo-test/src/Calendar/Calendar.jsx"],"names":["React","Component","axios","moment","BigCalendar","localizer","momentLocalizer","Calendar","constructor","props","state","appointments","modal","selectedEvent","startDate","Date","endDate","toggle","bind","onSelectEvent","event","e","setState","prevState","name","title","description","start","end","console","log","initDoctors","user","id","doctorId","res","get","data","componentDidMount","localStorage","getItem","doctor","history","push","appointmentArray","Object","keys","map","appointment","phone","firstName","speciality","date","render"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport 'react-big-scheduler/lib/css/style.css'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport moment from 'moment'\r\nimport BigCalendar from 'react-big-calendar'  \r\n\r\n\r\nconst localizer = BigCalendar.momentLocalizer(moment);\r\n\r\nclass Calendar extends Component {\r\n  state = {\r\n    appointments: [],\r\n    modal: false,\r\n    selectedEvent: {},\r\n    startDate: new Date(),\r\n    endDate: new Date()\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onSelectEvent = this.onSelectEvent.bind(this);\r\n  }\r\n  onSelectEvent(event, e) {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n      selectedEvent: {\r\n        name: event.title,\r\n        description: event.description\r\n      },\r\n      startDate: event.start,\r\n      endDate: event.end\r\n    }));\r\n    console.log(event);\r\n  }\r\n  toggle() {\r\n    console.log('dkhlt')\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n  async initDoctors(user) {\r\n    const id = user.doctorId;\r\n\r\n    const res = await axios.get(`http://localhost:8081/doctor/show/${id}`);\r\n    //const res = await axios.get(`http://localhost:8081/doctor/show/-M9_5pj1A-BkUQgiqRvO`);\r\n    return res.data\r\n  }\r\n  async componentDidMount() {\r\n    const user = localStorage.getItem('user')\r\n    if(!user.doctor){\r\n      this.props.history.push('/ogin')\r\n      return \r\n    }\r\n    const appointments = [];\r\n    const doctor = await this.initDoctors(user)\r\n    const appointmentArray = Object.keys(doctor.appointments).map((e) => {\r\n      return {\r\n        id: e,\r\n        ...doctor.appointments[e]\r\n      }\r\n\r\n    })\r\n    console.log(appointmentArray)\r\n      appointmentArray.map(appointment=>{\r\n        let e = {\r\n          id: doctor.phone,\r\n          //title: 'test',\r\n          title: doctor.firstName,\r\n          //description: 'test',\r\n          description: doctor.speciality,\r\n          start: new Date(appointment.date),\r\n          end: new Date(appointment.date)\r\n        }\r\n        appointments.push(e);\r\n      })\r\n      this.setState({\r\n        appointments: appointments\r\n      })\r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n\r\n\r\n        <BigCalendar\r\n          localizer={localizer}\r\n          events={this.state.appointments}\r\n          defaultView='month'\r\n          views={['month', 'week', 'day']}\r\n          defaultDate={new Date()}\r\n          onSelectEvent={this.onSelectEvent}\r\n        />\r\n      </div>)\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n//export default withDragDropContext(Calendar);\r\nexport default (Calendar);\r\n"]},"metadata":{},"sourceType":"module"}