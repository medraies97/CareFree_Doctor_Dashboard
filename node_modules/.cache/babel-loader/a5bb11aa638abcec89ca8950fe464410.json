{"ast":null,"code":"var _jsxFileName = \"C:\\\\AReact\\\\nobo-test\\\\src\\\\film-components\\\\film-search.jsx\";\nimport React from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from 'axios';\nimport FilmCard from './film-card';\nimport Container from '@material-ui/core/Container';\nimport './film-search.scss';\nimport GridList from '@material-ui/core/GridList';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nclass FilmSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchInputFilm: '',\n      filmList: [],\n      showFilmList: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.seachAction = this.seachAction.bind(this);\n  }\n\n  handleChange(event) {\n    const filmInputValue = event.target.value;\n    this.setState({\n      searchInputFilm: filmInputValue\n    });\n  }\n\n  seachAction() {\n    axios.get('https://api.tvmaze.com/search/shows?q=' + this.state.searchInputFilm).then(res => {\n      const filmListApi = res.data;\n      this.setState({\n        filmList: filmListApi,\n        showFilmList: true\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          searchInputFilm = _this$state.searchInputFilm,\n          showFilmList = _this$state.showFilmList,\n          filmList = _this$state.filmList;\n    return React.createElement(\"div\", {\n      className: \"content-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-film\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"input-with-icon-grid\",\n      value: searchInputFilm,\n      onChange: this.handleChange,\n      label: \"Film Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"icon-button\",\n      \"aria-label\": \"search\",\n      onClick: this.seachAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))))), showFilmList ? React.createElement(GridList, {\n      className: \"gridList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: \"Subheader\",\n      cols: 2,\n      style: {\n        height: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ListSubheader, {\n      className: \"subtitle-film-header\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Liste des films\")), filmList.map(film => React.createElement(FilmCard, {\n      key: film.show.id,\n      film: film,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))) : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"No Films \"));\n  }\n\n}\n\nexport default FilmSearch;","map":{"version":3,"sources":["C:/AReact/nobo-test/src/film-components/film-search.jsx"],"names":["React","GridListTile","TextField","Grid","SearchIcon","IconButton","axios","FilmCard","Container","GridList","ListSubheader","FilmSearch","Component","constructor","props","state","searchInputFilm","filmList","showFilmList","handleChange","bind","seachAction","event","filmInputValue","target","value","setState","get","then","res","filmListApi","data","render","height","map","film","show","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon  from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\nimport FilmCard from './film-card';\r\nimport Container from '@material-ui/core/Container';\r\nimport './film-search.scss'\r\nimport GridList from '@material-ui/core/GridList';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nclass FilmSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          searchInputFilm:'',\r\n          filmList:[],\r\n          showFilmList:false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.seachAction = this.seachAction.bind(this);\r\n      }\r\n      handleChange(event) {\r\n        const filmInputValue=event.target.value\r\n        this.setState({searchInputFilm: filmInputValue});\r\n      }\r\n      seachAction(){\r\n        \r\n        axios.get('https://api.tvmaze.com/search/shows?q='+this.state.searchInputFilm)\r\n          .then(res => {\r\n            const filmListApi = res.data;\r\n            this.setState({\r\n               filmList:filmListApi,\r\n               showFilmList:true\r\n              });\r\n          })\r\n      }\r\n    render() {\r\n        const {searchInputFilm,showFilmList,filmList}=this.state\r\n        return (\r\n            <div className=\"content-search\">\r\n              <div className=\"search-film\">\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <TextField id=\"input-with-icon-grid\" value={searchInputFilm} onChange={this.handleChange} label=\"Film Name\" />\r\n                  </Grid>\r\n                  <Grid item>\r\n                  <IconButton className='icon-button' aria-label=\"search\" onClick={this.seachAction} >\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            {\r\n              showFilmList ?\r\n                <GridList  className='gridList'>\r\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n                  <ListSubheader className='subtitle-film-header' component=\"div\">Liste des films</ListSubheader>\r\n                </GridListTile>\r\n                {filmList.map(film => (\r\n                  <FilmCard key={film.show.id}\r\n                  film={film} \r\n                  />\r\n              ))}\r\n              </GridList>\r\n              :\r\n              <h2>No Films </h2>\r\n            }\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default FilmSearch;"]},"metadata":{},"sourceType":"module"}