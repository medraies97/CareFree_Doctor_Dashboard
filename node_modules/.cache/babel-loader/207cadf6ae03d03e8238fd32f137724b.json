{"ast":null,"code":"var _jsxFileName = \"C:\\\\AReact\\\\nobo-test\\\\src\\\\login-component\\\\login.jsx\";\nimport React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Axios from 'axios';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first_name: '',\n      last_name: '',\n      error: false,\n      email: '',\n      emailError: false,\n      password: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  async handleClick() {\n    console.log('dl');\n\n    if (this.validateEmail(this.state.email)) {\n      this.setState({\n        emailError: false\n      });\n      const login = Object.assign({\n        email: this.state.email,\n        password: this.state.password\n      });\n\n      try {\n        const result = await Axios.post('http://localhost:8081/login', login);\n        const data = Object.assign({\n          user: result.data.doctor ? false : true,\n          doctor: result.data.doctor ? true : false,\n          doctorId: result.data.doctor ? Object.keys(result.data.doctor)[0] : '',\n          token: result.data.accessToken,\n          userId: result.data.id\n        });\n        console.log(data);\n        localStorage.setItem('user', json.stringify(data));\n\n        if (data.doctor) {\n          this.props.history.push('/calendar');\n        } else if (data.user) {\n          this.props.history.push('/');\n        } else {\n          this.setState({\n            error: true\n          });\n        }\n      } catch (e) {\n        console.log(e);\n        this.setState({\n          error: true\n        });\n      }\n    } else {\n      this.setState({\n        email: '',\n        emailError: true\n      });\n    }\n  }\n\n  async componentDidMount() {\n    localStorage.clear();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content-search-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Login\"), this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Error\") : '', React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-password-input\",\n      label: \"Email\",\n      required: true,\n      type: \"email\",\n      value: this.state.email,\n      error: this.state.emailError,\n      helperText: this.state.emailError ? 'Incorrect Email.' : null,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"standard-password-input\",\n      label: \"Password\",\n      required: true,\n      type: \"password\",\n      autoComplete: \"current-password\",\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/AReact/nobo-test/src/login-component/login.jsx"],"names":["React","TextField","Button","Axios","Login","Component","constructor","props","state","first_name","last_name","error","email","emailError","password","handleClick","bind","validateEmail","re","test","String","toLowerCase","console","log","setState","login","Object","assign","result","post","data","user","doctor","doctorId","keys","token","accessToken","userId","id","localStorage","setItem","json","stringify","history","push","e","componentDidMount","clear","render","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,KAAK,EAAE,KAHE;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,UAAU,EAAE,KALH;AAMTC,MAAAA,QAAQ,EAAE;AAND,KAAb;AAQA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACDC,EAAAA,aAAa,CAACL,KAAD,EAAQ;AACjB,UAAMM,EAAE,GAAG,yJAAX;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACR,KAAD,CAAN,CAAcS,WAAd,EAAR,CAAP;AACH;;AACD,QAAMN,WAAN,GAAoB;AAChBO,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,QAAI,KAAKN,aAAL,CAAmB,KAAKT,KAAL,CAAWI,KAA9B,CAAJ,EAA0C;AACtC,WAAKY,QAAL,CAAc;AAAEX,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,YAAMY,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc;AACxBf,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KADM;AAExBE,QAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM;AAFG,OAAd,CAAd;;AAIA,UAAI;AACA,cAAMc,MAAM,GAAG,MAAMzB,KAAK,CAAC0B,IAAN,CAAW,6BAAX,EAA0CJ,KAA1C,CAArB;AACA,cAAMK,IAAI,GAAEJ,MAAM,CAACC,MAAP,CAAe;AACvBI,UAAAA,IAAI,EAAEH,MAAM,CAACE,IAAP,CAAYE,MAAZ,GAAqB,KAArB,GAA6B,IADZ;AAEvBA,UAAAA,MAAM,EAAEJ,MAAM,CAACE,IAAP,CAAYE,MAAZ,GAAqB,IAArB,GAA4B,KAFb;AAGvBC,UAAAA,QAAQ,EAAEL,MAAM,CAACE,IAAP,CAAYE,MAAZ,GAAqBN,MAAM,CAACQ,IAAP,CAAYN,MAAM,CAACE,IAAP,CAAYE,MAAxB,EAAgC,CAAhC,CAArB,GAA0D,EAH7C;AAIvBG,UAAAA,KAAK,EAAEP,MAAM,CAACE,IAAP,CAAYM,WAJI;AAKvBC,UAAAA,MAAM,EAAET,MAAM,CAACE,IAAP,CAAYQ;AALG,SAAf,CAAZ;AAOAhB,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACAS,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAA7B;;AACA,YAAGA,IAAI,CAACE,MAAR,EAAe;AACX,eAAKzB,KAAL,CAAWoC,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACH,SAFD,MAEM,IAAId,IAAI,CAACC,IAAT,EAAc;AAChB,eAAKxB,KAAL,CAAWoC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,SAFK,MAED;AACD,eAAKpB,QAAL,CAAc;AAAEb,YAAAA,KAAK,EAAE;AAAT,WAAd;AACH;AACJ,OAlBD,CAkBE,OAAOkC,CAAP,EAAU;AACRvB,QAAAA,OAAO,CAACC,GAAR,CAAYsB,CAAZ;AACA,aAAKrB,QAAL,CAAc;AAAEb,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH;AACJ,KA5BD,MA4BO;AACH,WAAKa,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,UAAU,EAAE;AAAzB,OAAd;AACH;AACJ;;AACD,QAAMiC,iBAAN,GAA0B;AACtBP,IAAAA,YAAY,CAACQ,KAAb;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEK,KAAKxC,KAAL,CAAWG,KAAX,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApB,GAAoC,EAFzC,EAGI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,yBADP;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,KALtB;AAMI,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,UANtB;AAOI,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK,UAAX,GAAwB,kBAAxB,GAA6C,IAP7D;AAQI,MAAA,QAAQ,EAAGoC,KAAD,IAAW,KAAKzB,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEqC,KAAK,CAACC,MAAN,CAAaC;AAAtB,OAAd,CARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,yBADP;AAEI,MAAA,KAAK,EAAC,UAFV;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,YAAY,EAAC,kBALjB;AAMI,MAAA,QAAQ,EAAGF,KAAD,IAAW,KAAKzB,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAEmC,KAAK,CAACC,MAAN,CAAaC;AAAzB,OAAd,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,EAuBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAKpC,WAAL,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,CAHJ,CADJ;AAiCH;;AAxF+B;;AA0FpC,eAAeX,KAAf","sourcesContent":["import React from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport Axios from 'axios';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            error: false,\r\n            email: '',\r\n            emailError: false,\r\n            password: ''\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    validateEmail(email) {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n    async handleClick() {\r\n        console.log('dl')\r\n        if (this.validateEmail(this.state.email)) {\r\n            this.setState({ emailError: false })\r\n            const login = Object.assign({\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n            try {\r\n                const result = await Axios.post('http://localhost:8081/login', login)\r\n                const data =Object.assign( {\r\n                    user: result.data.doctor ? false : true,\r\n                    doctor: result.data.doctor ? true : false ,\r\n                    doctorId: result.data.doctor ? Object.keys(result.data.doctor)[0] : '' ,\r\n                    token: result.data.accessToken,\r\n                    userId: result.data.id,\r\n                })\r\n                console.log(data)\r\n                localStorage.setItem('user', json.stringify(data));\r\n                if(data.doctor){\r\n                    this.props.history.push('/calendar')\r\n                }else if (data.user){\r\n                    this.props.history.push('/')\r\n                }else{\r\n                    this.setState({ error: true })\r\n                }\r\n            } catch (e) {\r\n                console.log(e)\r\n                this.setState({ error: true })\r\n            }\r\n        } else {\r\n            this.setState({ email: '', emailError: true })\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        localStorage.clear();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content-search-login\">\r\n                <h1>Login</h1>\r\n                {this.state.error ? (<p>Error</p>) : ''}\r\n                <form noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"standard-password-input\"\r\n                        label=\"Email\"\r\n                        required\r\n                        type=\"email\"\r\n                        value={this.state.email}\r\n                        error={this.state.emailError}\r\n                        helperText={this.state.emailError ? 'Incorrect Email.' : null}\r\n                        onChange={(event) => this.setState({ email: event.target.value })}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        id=\"standard-password-input\"\r\n                        label=\"Password\"\r\n                        required\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => this.setState({ password: event.target.value })}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.handleClick()}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}