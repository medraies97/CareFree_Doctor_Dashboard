{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactDom = require('react-dom');\n\nvar _dates = require('./utils/dates');\n\nvar _dates2 = _interopRequireDefault(_dates);\n\nvar _localizer = require('./localizer');\n\nvar _localizer2 = _interopRequireDefault(_localizer);\n\nvar _DayColumn = require('./DayColumn');\n\nvar _DayColumn2 = _interopRequireDefault(_DayColumn);\n\nvar _TimeColumn = require('./TimeColumn');\n\nvar _TimeColumn2 = _interopRequireDefault(_TimeColumn);\n\nvar _DateContentRow = require('./DateContentRow');\n\nvar _DateContentRow2 = _interopRequireDefault(_DateContentRow);\n\nvar _Header = require('./Header');\n\nvar _Header2 = _interopRequireDefault(_Header);\n\nvar _width = require('dom-helpers/query/width');\n\nvar _width2 = _interopRequireDefault(_width);\n\nvar _scrollbarSize = require('dom-helpers/util/scrollbarSize');\n\nvar _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);\n\nvar _messages = require('./utils/messages');\n\nvar _messages2 = _interopRequireDefault(_messages);\n\nvar _propTypes3 = require('./utils/propTypes');\n\nvar _helpers = require('./utils/helpers');\n\nvar _accessors = require('./utils/accessors');\n\nvar _eventLevels = require('./utils/eventLevels');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeGrid = function (_Component) {\n  _inherits(TimeGrid, _Component);\n\n  function TimeGrid(props) {\n    _classCallCheck(this, TimeGrid);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.handleSelectAllDaySlot = function (slots, slotInfo) {\n      var onSelectSlot = _this.props.onSelectSlot;\n      (0, _helpers.notify)(onSelectSlot, {\n        slots: slots,\n        start: slots[0],\n        end: slots[slots.length - 1],\n        action: slotInfo.action\n      });\n    };\n\n    _this.state = {\n      gutterWidth: undefined,\n      isOverflowing: null\n    };\n    _this.handleSelectEvent = _this.handleSelectEvent.bind(_this);\n    _this.handleHeaderClick = _this.handleHeaderClick.bind(_this);\n    return _this;\n  }\n\n  TimeGrid.prototype.componentWillMount = function componentWillMount() {\n    this._gutters = [];\n    this.calculateScroll();\n  };\n\n  TimeGrid.prototype.componentDidMount = function componentDidMount() {\n    this.checkOverflow();\n\n    if (this.props.width == null) {\n      this.measureGutter();\n    }\n\n    this.applyScroll();\n    this.positionTimeIndicator();\n    this.triggerTimeIndicatorUpdate();\n  };\n\n  TimeGrid.prototype.componentWillUnmount = function componentWillUnmount() {\n    window.clearTimeout(this._timeIndicatorTimeout);\n  };\n\n  TimeGrid.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.width == null && !this.state.gutterWidth) {\n      this.measureGutter();\n    }\n\n    this.applyScroll();\n    this.positionTimeIndicator(); //this.checkOverflow()\n  };\n\n  TimeGrid.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        range = _props.range,\n        scrollToTime = _props.scrollToTime; // When paginating, reset scroll\n\n    if (!_dates2.default.eq(nextProps.range[0], range[0], 'minute') || !_dates2.default.eq(nextProps.scrollToTime, scrollToTime, 'minute')) {\n      this.calculateScroll();\n    }\n  };\n\n  TimeGrid.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props2 = this.props,\n        events = _props2.events,\n        range = _props2.range,\n        width = _props2.width,\n        startAccessor = _props2.startAccessor,\n        endAccessor = _props2.endAccessor,\n        allDayAccessor = _props2.allDayAccessor,\n        showMultiDayTimes = _props2.showMultiDayTimes;\n    width = width || this.state.gutterWidth;\n    var start = range[0],\n        end = range[range.length - 1];\n    this.slots = range.length;\n    var allDayEvents = [],\n        rangeEvents = [];\n    events.forEach(function (event) {\n      if ((0, _eventLevels.inRange)(event, start, end, _this2.props)) {\n        var eStart = (0, _accessors.accessor)(event, startAccessor),\n            eEnd = (0, _accessors.accessor)(event, endAccessor);\n\n        if ((0, _accessors.accessor)(event, allDayAccessor) || _dates2.default.isJustDate(eStart) && _dates2.default.isJustDate(eEnd) || !showMultiDayTimes && !_dates2.default.eq(eStart, eEnd, 'day')) {\n          allDayEvents.push(event);\n        } else {\n          rangeEvents.push(event);\n        }\n      }\n    });\n    allDayEvents.sort(function (a, b) {\n      return (0, _eventLevels.sortEvents)(a, b, _this2.props);\n    });\n\n    var gutterRef = function gutterRef(ref) {\n      return _this2._gutters[1] = ref && (0, _reactDom.findDOMNode)(ref);\n    };\n\n    return _react2.default.createElement('div', {\n      className: 'rbc-time-view'\n    }, this.renderHeader(range, allDayEvents, width), _react2.default.createElement('div', {\n      ref: 'content',\n      className: 'rbc-time-content'\n    }, _react2.default.createElement('div', {\n      ref: 'timeIndicator',\n      className: 'rbc-current-time-indicator'\n    }), _react2.default.createElement(_TimeColumn2.default, _extends({}, this.props, {\n      showLabels: true,\n      style: {\n        width: width\n      },\n      ref: gutterRef,\n      className: 'rbc-time-gutter'\n    })), this.renderEvents(range, rangeEvents, this.props.now)));\n  };\n\n  TimeGrid.prototype.renderEvents = function renderEvents(range, events, today) {\n    var _this3 = this;\n\n    var _props3 = this.props,\n        min = _props3.min,\n        max = _props3.max,\n        endAccessor = _props3.endAccessor,\n        startAccessor = _props3.startAccessor,\n        components = _props3.components;\n    return range.map(function (date, idx) {\n      var daysEvents = events.filter(function (event) {\n        return _dates2.default.inRange(date, (0, _accessors.accessor)(event, startAccessor), (0, _accessors.accessor)(event, endAccessor), 'day');\n      });\n      return _react2.default.createElement(_DayColumn2.default, _extends({}, _this3.props, {\n        min: _dates2.default.merge(date, min),\n        max: _dates2.default.merge(date, max),\n        eventComponent: components.event,\n        eventWrapperComponent: components.eventWrapper,\n        dayWrapperComponent: components.dayWrapper,\n        className: (0, _classnames2.default)({\n          'rbc-now': _dates2.default.eq(date, today, 'day')\n        }),\n        style: (0, _eventLevels.segStyle)(1, _this3.slots),\n        key: idx,\n        date: date,\n        events: daysEvents\n      }));\n    });\n  };\n\n  TimeGrid.prototype.renderHeader = function renderHeader(range, events, width) {\n    var _this4 = this;\n\n    var _props4 = this.props,\n        messages = _props4.messages,\n        rtl = _props4.rtl,\n        selectable = _props4.selectable,\n        components = _props4.components,\n        now = _props4.now;\n\n    var _ref = this.state || {},\n        isOverflowing = _ref.isOverflowing;\n\n    var style = {};\n    if (isOverflowing) style[rtl ? 'marginLeft' : 'marginRight'] = (0, _scrollbarSize2.default)() + 'px';\n    return _react2.default.createElement('div', {\n      ref: 'headerCell',\n      className: (0, _classnames2.default)('rbc-time-header', isOverflowing && 'rbc-overflowing'),\n      style: style\n    }, _react2.default.createElement('div', {\n      className: 'rbc-row'\n    }, _react2.default.createElement('div', {\n      className: 'rbc-label rbc-header-gutter',\n      style: {\n        width: width\n      }\n    }), this.renderHeaderCells(range)), _react2.default.createElement('div', {\n      className: 'rbc-row'\n    }, _react2.default.createElement('div', {\n      ref: function ref(_ref2) {\n        return _this4._gutters[0] = _ref2;\n      },\n      className: 'rbc-label rbc-header-gutter',\n      style: {\n        width: width\n      }\n    }, (0, _messages2.default)(messages).allDay), _react2.default.createElement(_DateContentRow2.default, {\n      now: now,\n      minRows: 2,\n      range: range,\n      rtl: this.props.rtl,\n      events: events,\n      className: 'rbc-allday-cell',\n      selectable: selectable,\n      onSelectSlot: this.handleSelectAllDaySlot,\n      dateCellWrapper: components.dateCellWrapper,\n      eventComponent: this.props.components.event,\n      eventWrapperComponent: this.props.components.eventWrapper,\n      titleAccessor: this.props.titleAccessor,\n      startAccessor: this.props.startAccessor,\n      endAccessor: this.props.endAccessor,\n      allDayAccessor: this.props.allDayAccessor,\n      eventPropGetter: this.props.eventPropGetter,\n      selected: this.props.selected,\n      onSelect: this.handleSelectEvent,\n      longPressThreshold: this.props.longPressThreshold\n    })));\n  };\n\n  TimeGrid.prototype.renderHeaderCells = function renderHeaderCells(range) {\n    var _this5 = this;\n\n    var _props5 = this.props,\n        dayFormat = _props5.dayFormat,\n        culture = _props5.culture,\n        components = _props5.components,\n        getDrilldownView = _props5.getDrilldownView;\n    var HeaderComponent = components.header || _Header2.default;\n    return range.map(function (date, i) {\n      var drilldownView = getDrilldownView(date);\n\n      var label = _localizer2.default.format(date, dayFormat, culture);\n\n      var header = _react2.default.createElement(HeaderComponent, {\n        date: date,\n        label: label,\n        localizer: _localizer2.default,\n        format: dayFormat,\n        culture: culture\n      });\n\n      return _react2.default.createElement('div', {\n        key: i,\n        className: (0, _classnames2.default)('rbc-header', _dates2.default.isToday(date) && 'rbc-today'),\n        style: (0, _eventLevels.segStyle)(1, _this5.slots)\n      }, drilldownView ? _react2.default.createElement('a', {\n        href: '#',\n        onClick: function onClick(e) {\n          return _this5.handleHeaderClick(date, drilldownView, e);\n        }\n      }, header) : _react2.default.createElement('span', null, header));\n    });\n  };\n\n  TimeGrid.prototype.handleHeaderClick = function handleHeaderClick(date, view, e) {\n    e.preventDefault();\n    (0, _helpers.notify)(this.props.onDrillDown, [date, view]);\n  };\n\n  TimeGrid.prototype.handleSelectEvent = function handleSelectEvent() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (0, _helpers.notify)(this.props.onSelectEvent, args);\n  };\n\n  TimeGrid.prototype.handleSelectAlldayEvent = function handleSelectAlldayEvent() {\n    //cancel any pending selections so only the event click goes through.\n    this.clearSelection();\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    (0, _helpers.notify)(this.props.onSelectEvent, args);\n  };\n\n  TimeGrid.prototype.clearSelection = function clearSelection() {\n    clearTimeout(this._selectTimer);\n    this._pendingSelection = [];\n  };\n\n  TimeGrid.prototype.measureGutter = function measureGutter() {\n    var width = this.state.gutterWidth;\n    var gutterCells = this._gutters;\n\n    if (!width) {\n      width = Math.max.apply(Math, gutterCells.map(_width2.default));\n\n      if (width) {\n        this.setState({\n          gutterWidth: width\n        });\n      }\n    }\n  };\n\n  TimeGrid.prototype.applyScroll = function applyScroll() {\n    if (this._scrollRatio) {\n      var content = this.refs.content;\n      content.scrollTop = content.scrollHeight * this._scrollRatio; // Only do this once\n\n      this._scrollRatio = null;\n    }\n  };\n\n  TimeGrid.prototype.calculateScroll = function calculateScroll() {\n    var _props6 = this.props,\n        min = _props6.min,\n        max = _props6.max,\n        scrollToTime = _props6.scrollToTime;\n\n    var diffMillis = scrollToTime - _dates2.default.startOf(scrollToTime, 'day');\n\n    var totalMillis = _dates2.default.diff(max, min);\n\n    this._scrollRatio = diffMillis / totalMillis;\n  };\n\n  TimeGrid.prototype.checkOverflow = function checkOverflow() {\n    var _this6 = this;\n\n    if (this._updatingOverflow) return;\n    var isOverflowing = this.refs.content.scrollHeight > this.refs.content.clientHeight;\n\n    if (this.state.isOverflowing !== isOverflowing) {\n      this._updatingOverflow = true;\n      this.setState({\n        isOverflowing: isOverflowing\n      }, function () {\n        _this6._updatingOverflow = false;\n      });\n    }\n  };\n\n  TimeGrid.prototype.positionTimeIndicator = function positionTimeIndicator() {\n    var _props7 = this.props,\n        rtl = _props7.rtl,\n        min = _props7.min,\n        max = _props7.max;\n    var now = new Date();\n\n    var secondsGrid = _dates2.default.diff(max, min, 'seconds');\n\n    var secondsPassed = _dates2.default.diff(now, min, 'seconds');\n\n    var timeIndicator = this.refs.timeIndicator;\n    var factor = secondsPassed / secondsGrid;\n    var timeGutter = this._gutters[this._gutters.length - 1];\n\n    if (timeGutter && now >= min && now <= max) {\n      var pixelHeight = timeGutter.offsetHeight;\n      var offset = Math.floor(factor * pixelHeight);\n      timeIndicator.style.display = 'block';\n      timeIndicator.style[rtl ? 'left' : 'right'] = 0;\n      timeIndicator.style[rtl ? 'right' : 'left'] = timeGutter.offsetWidth + 'px';\n      timeIndicator.style.top = offset + 'px';\n    } else {\n      timeIndicator.style.display = 'none';\n    }\n  };\n\n  TimeGrid.prototype.triggerTimeIndicatorUpdate = function triggerTimeIndicatorUpdate() {\n    var _this7 = this; // Update the position of the time indicator every minute\n\n\n    this._timeIndicatorTimeout = window.setTimeout(function () {\n      _this7.positionTimeIndicator();\n\n      _this7.triggerTimeIndicatorUpdate();\n    }, 60000);\n  };\n\n  return TimeGrid;\n}(_react.Component);\n\nTimeGrid.propTypes = {\n  events: _propTypes2.default.array.isRequired,\n  step: _propTypes2.default.number,\n  range: _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(Date)),\n  min: _propTypes2.default.instanceOf(Date),\n  max: _propTypes2.default.instanceOf(Date),\n  now: _propTypes2.default.instanceOf(Date),\n  scrollToTime: _propTypes2.default.instanceOf(Date),\n  eventPropGetter: _propTypes2.default.func,\n  dayFormat: _propTypes3.dateFormat,\n  showMultiDayTimes: _propTypes2.default.bool,\n  culture: _propTypes2.default.string,\n  rtl: _propTypes2.default.bool,\n  width: _propTypes2.default.number,\n  titleAccessor: _propTypes3.accessor.isRequired,\n  allDayAccessor: _propTypes3.accessor.isRequired,\n  startAccessor: _propTypes3.accessor.isRequired,\n  endAccessor: _propTypes3.accessor.isRequired,\n  selected: _propTypes2.default.object,\n  selectable: _propTypes2.default.oneOf([true, false, 'ignoreEvents']),\n  longPressThreshold: _propTypes2.default.number,\n  onNavigate: _propTypes2.default.func,\n  onSelectSlot: _propTypes2.default.func,\n  onSelectEnd: _propTypes2.default.func,\n  onSelectStart: _propTypes2.default.func,\n  onSelectEvent: _propTypes2.default.func,\n  onDrillDown: _propTypes2.default.func,\n  getDrilldownView: _propTypes2.default.func.isRequired,\n  messages: _propTypes2.default.object,\n  components: _propTypes2.default.object.isRequired\n};\nTimeGrid.defaultProps = {\n  step: 30,\n  min: _dates2.default.startOf(new Date(), 'day'),\n  max: _dates2.default.endOf(new Date(), 'day'),\n  scrollToTime: _dates2.default.startOf(new Date(), 'day'),\n\n  /* these 2 are needed to satisfy requirements from TimeColumn required props\n   * There is a strange bug in React, using ...TimeColumn.defaultProps causes weird crashes\n   */\n  type: 'gutter',\n  now: new Date()\n};\nexports.default = TimeGrid;","map":null,"metadata":{},"sourceType":"script"}