{"ast":null,"code":"var _jsxFileName = \"C:\\\\AReact\\\\nobo-test\\\\src\\\\Calendar\\\\Calendar.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport 'react-big-scheduler/lib/css/style.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar';\nimport { Modal, Button } from 'react-bootstrap';\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointments: [],\n      modal: false,\n      selectedEvent: {},\n      startDate: new Date(),\n      endDate: new Date()\n    };\n    this.toggle = this.toggle.bind(this);\n    this.onSelectEvent = this.onSelectEvent.bind(this);\n  }\n\n  onSelectEvent(event, e) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      selectedEvent: {\n        name: event.title,\n        description: event.description\n      },\n      startDate: event.start,\n      endDate: event.end\n    }));\n    console.log(event);\n  }\n\n  toggle() {\n    console.log('dkhlt');\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  async initDoctors() {\n    const id = 0; //const res = await axios.get(`http://localhost:8081/doctor/show/${id}`);\n\n    const res = await axios.get(\"http://localhost:8081/doctor/show/-M9_5pj1A-BkUQgiqRvO\");\n    return res.data;\n  }\n\n  async componentDidMount() {\n    const appointments = [];\n    const doctor = await this.initDoctors();\n\n    if (doctor.appointments) {\n      doctor.appointments.map(appointment => {\n        let e = {\n          id: doctor.phone,\n          title: 'test',\n          //title: doctor.firstName,\n          description: 'test',\n          description: doctor.speciality,\n          start: new Date(appointment.appointmentDate),\n          end: new Date(appointment.appointmentDate)\n        };\n        appointments.push(e);\n      });\n      this.setState({\n        appointments: appointments\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(BigCalendar, {\n      localizer: localizer,\n      events: this.state.evt,\n      defaultView: \"month\",\n      views: ['month', 'week', 'day'],\n      defaultDate: new Date(),\n      onSelectEvent: this.onSelectEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      show: this.state.modal,\n      onHide: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.selectedEvent.name)), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.selectedEvent.description), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.toggle();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n} //export default withDragDropContext(Calendar);\n\n\nexport default Calendar;","map":{"version":3,"sources":["C:/AReact/nobo-test/src/Calendar/Calendar.jsx"],"names":["React","Component","axios","moment","BigCalendar","Modal","Button","localizer","momentLocalizer","Calendar","constructor","props","state","appointments","modal","selectedEvent","startDate","Date","endDate","toggle","bind","onSelectEvent","event","e","setState","prevState","name","title","description","start","end","console","log","initDoctors","id","res","get","data","componentDidMount","doctor","map","appointment","phone","speciality","appointmentDate","push","render","evt"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport 'react-big-scheduler/lib/css/style.css'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport moment from 'moment'\r\nimport BigCalendar from 'react-big-calendar'\r\n\r\nimport {\r\n  Modal, Button\r\n} from 'react-bootstrap';\r\n\r\nconst localizer = BigCalendar.momentLocalizer(moment);\r\n\r\nclass Calendar extends Component {\r\n  state = {\r\n    appointments: [],\r\n    modal: false,\r\n    selectedEvent: {},\r\n    startDate: new Date(),\r\n    endDate: new Date()\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onSelectEvent = this.onSelectEvent.bind(this);\r\n  }\r\n  onSelectEvent(event, e) {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n      selectedEvent: {\r\n        name: event.title,\r\n        description: event.description\r\n      },\r\n      startDate: event.start,\r\n      endDate: event.end\r\n    }));\r\n    console.log(event);\r\n  }\r\n  toggle() {\r\n    console.log('dkhlt')\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n  async initDoctors() {\r\n    const id = 0\r\n    //const res = await axios.get(`http://localhost:8081/doctor/show/${id}`);\r\n    const res = await axios.get(`http://localhost:8081/doctor/show/-M9_5pj1A-BkUQgiqRvO`);\r\n    return res.data\r\n  }\r\n  async componentDidMount() {\r\n\r\n    const appointments = [];\r\n    const doctor = await this.initDoctors()\r\n    if(doctor.appointments){\r\n      doctor.appointments.map(appointment=>{\r\n        let e = {\r\n          id: doctor.phone,\r\n          title: 'test',\r\n          //title: doctor.firstName,\r\n          description: 'test',\r\n          description: doctor.speciality,\r\n          start: new Date(appointment.appointmentDate),\r\n          end: new Date(appointment.appointmentDate)\r\n        }\r\n        appointments.push(e);\r\n      })\r\n      this.setState({\r\n        appointments: appointments\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n\r\n\r\n        <BigCalendar\r\n          localizer={localizer}\r\n          events={this.state.evt}\r\n          defaultView='month'\r\n          views={['month', 'week', 'day']}\r\n          defaultDate={new Date()}\r\n          onSelectEvent={this.onSelectEvent}\r\n        />\r\n        <Modal show={this.state.modal} onHide={this.toggle}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedEvent.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.selectedEvent.description}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => { this.toggle() }}>\r\n              Close\r\n          </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>)\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n//export default withDragDropContext(Calendar);\r\nexport default (Calendar);\r\n"]},"metadata":{},"sourceType":"module"}